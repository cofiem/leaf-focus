---
- name: Install required dependencies
  ansible.builtin.apt:
    name:
      - 'libfontconfig1-dev'
    state: 'present'

- name: Check if command is already available
  ansible.builtin.command: '{{ xpdf_info }} -v'
  ignore_errors: true
  register: 'xpdf_exe_present'

# see https://github.com/gpg/gnupg/blob/master/doc/DETAILS
- name: Check if gpg key has already been imported
  ansible.builtin.command: 'gpg --list-public-keys --with-colons {{ xpdf_gpg_fingerprint }}'
  ignore_errors: true
  register: 'xpdf_gpg_key_present'
  when: 'xpdf_exe_present.rc != 0'

- name: Copy over gpg key if it has not already been imported
  ansible.builtin.copy:
    src: '{{ xpdf_gpg_key_file }}'
    dest: '/tmp/{{ xpdf_gpg_key_file }}'
    mode: 'u=r,g=r,o=r'
  when: 'xpdf_gpg_key_present.rc != 0 and xpdf_exe_present.rc != 0'

- name: Import gpg key if it is not present
  ansible.builtin.command: 'gpg --import /tmp/{{ xpdf_gpg_key_file }}'
  when: 'xpdf_gpg_key_present.rc != 0 and  xpdf_exe_present.rc != 0'

- name: Verify gpg key fingerprint
  ansible.builtin.command: 'gpg --fingerprint --with-colons {{ xpdf_gpg_fingerprint }}'
  register: 'xpdf_gpg_key_check'
  when: 'xpdf_exe_present.rc != 0'

- name: Fail if gpg key fingerprint is not as expected
  ansible.builtin.fail:
    msg: "Invalid gpg key fingerprint. Expecting '{{ xpdf_gpg_fingerprint }}'. Found '{{ xpdf_gpg_key_check.stdout }}'."
  when: 'xpdf_gpg_key_check.stdout.find(xpdf_gpg_fingerprint) == -1 and xpdf_exe_present.rc != 0'

- name: Download signature '{{ xpdf_gpg_url }}'
  ansible.builtin.get_url:
    url: '{{ xpdf_gpg_url }}'
    dest: '/tmp/xpdf-tools-linux.tar.gz.sig'
    mode: 'u=r,g=r,o=r'
  when: 'xpdf_exe_present.rc != 0'

- name: Download file '{{ xpdf_file_url }}'
  ansible.builtin.get_url:
    url: '{{ xpdf_file_url }}'
    dest: '/tmp/xpdf-tools-linux.tar.gz'
    mode: 'u=r,g=r,o=r'
  when: 'xpdf_exe_present.rc != 0'

- name: Verify the file using the signature
  ansible.builtin.command: 'gpg --verify /tmp/xpdf-tools-linux.tar.gz.sig /tmp/xpdf-tools-linux.tar.gz'
  when: 'xpdf_exe_present.rc != 0'

- name: Unpack archive
  ansible.builtin.unarchive:
    src: '/tmp/xpdf-tools-linux.tar.gz'
    dest: '{{ app_base_dir }}'
    remote_src: true
  when: 'xpdf_exe_present.rc != 0'
